<?php

/**
 * BasePublication
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $title
 * @property string $description
 * @property integer $blogs_id
 * @property Blog $blog
 * @property Doctrine_Collection $Comments
 * 
 * @method integer             getId()          Returns the current record's "id" value
 * @method string              getTitle()       Returns the current record's "title" value
 * @method string              getDescription() Returns the current record's "description" value
 * @method integer             getBlogsId()     Returns the current record's "blogs_id" value
 * @method Blog                getBlog()        Returns the current record's "blog" value
 * @method Doctrine_Collection getComments()    Returns the current record's "Comments" collection
 * @method Publication         setId()          Sets the current record's "id" value
 * @method Publication         setTitle()       Sets the current record's "title" value
 * @method Publication         setDescription() Sets the current record's "description" value
 * @method Publication         setBlogsId()     Sets the current record's "blogs_id" value
 * @method Publication         setBlog()        Sets the current record's "blog" value
 * @method Publication         setComments()    Sets the current record's "Comments" collection
 * 
 * @package    Eddyjim
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePublication extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('Publications');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'unique' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('title', 'string', 45, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 45,
             ));
        $this->hasColumn('description', 'string', 45, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 45,
             ));
        $this->hasColumn('blogs_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));


        $this->index('fk_Publications_Blogs1_idx', array(
             'fields' => 
             array(
              0 => 'blogs_id',
             ),
             ));
        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Blog as blog', array(
             'local' => 'blogs_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));

        $this->hasMany('Comment as Comments', array(
             'local' => 'id',
             'foreign' => 'Publications_id'));
    }
}