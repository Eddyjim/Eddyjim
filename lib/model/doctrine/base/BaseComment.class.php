<?php

/**
 * BaseComment
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $user_id
 * @property blob $description
 * @property integer $Publications_id
 * @property integer $Comments_id
 * @property Publication $Publication
 * @property Comment $Comment
 * @property Doctrine_Collection $Comments
 * 
 * @method integer             getId()              Returns the current record's "id" value
 * @method string              getUserId()          Returns the current record's "user_id" value
 * @method blob                getDescription()     Returns the current record's "description" value
 * @method integer             getPublicationsId()  Returns the current record's "Publications_id" value
 * @method integer             getCommentsId()      Returns the current record's "Comments_id" value
 * @method Publication         getPublication()     Returns the current record's "Publication" value
 * @method Comment             getComment()         Returns the current record's "Comment" value
 * @method Doctrine_Collection getComments()        Returns the current record's "Comments" collection
 * @method Comment             setId()              Sets the current record's "id" value
 * @method Comment             setUserId()          Sets the current record's "user_id" value
 * @method Comment             setDescription()     Sets the current record's "description" value
 * @method Comment             setPublicationsId()  Sets the current record's "Publications_id" value
 * @method Comment             setCommentsId()      Sets the current record's "Comments_id" value
 * @method Comment             setPublication()     Sets the current record's "Publication" value
 * @method Comment             setComment()         Sets the current record's "Comment" value
 * @method Comment             setComments()        Sets the current record's "Comments" collection
 * 
 * @package    Eddyjim
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseComment extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('Comments');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'unique' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('user_id', 'string', 45, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 45,
             ));
        $this->hasColumn('description', 'blob', 65535, array(
             'type' => 'blob',
             'notnull' => true,
             'length' => 65535,
             ));
        $this->hasColumn('Publications_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('Comments_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));


        $this->index('fk_Comments_Publications1_idx', array(
             'fields' => 
             array(
              0 => 'Publications_id',
             ),
             ));
        $this->index('fk_Comments_Comments1_idx', array(
             'fields' => 
             array(
              0 => 'Comments_id',
             ),
             ));
        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Publication', array(
             'local' => 'Publications_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));

        $this->hasOne('Comment', array(
             'local' => 'Comments_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));

        $this->hasMany('Comment as Comments', array(
             'local' => 'id',
             'foreign' => 'Comments_id'));
    }
}