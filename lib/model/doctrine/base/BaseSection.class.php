<?php

/**
 * BaseSection
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property string $icon
 * @property integer $order
 * @property integer $Pages_id
 * @property Page $page
 * @property Doctrine_Collection $banners
 * @property Doctrine_Collection $Blogs
 * @property Doctrine_Collection $SectionBanner
 * @property Doctrine_Collection $Downloads
 * 
 * @method integer             getId()            Returns the current record's "id" value
 * @method string              getName()          Returns the current record's "name" value
 * @method string              getIcon()          Returns the current record's "icon" value
 * @method integer             getOrder()         Returns the current record's "order" value
 * @method integer             getPagesId()       Returns the current record's "Pages_id" value
 * @method Page                getPage()          Returns the current record's "page" value
 * @method Doctrine_Collection getBanners()       Returns the current record's "banners" collection
 * @method Doctrine_Collection getBlogs()         Returns the current record's "Blogs" collection
 * @method Doctrine_Collection getSectionBanner() Returns the current record's "SectionBanner" collection
 * @method Doctrine_Collection getDownloads()     Returns the current record's "Downloads" collection
 * @method Section             setId()            Sets the current record's "id" value
 * @method Section             setName()          Sets the current record's "name" value
 * @method Section             setIcon()          Sets the current record's "icon" value
 * @method Section             setOrder()         Sets the current record's "order" value
 * @method Section             setPagesId()       Sets the current record's "Pages_id" value
 * @method Section             setPage()          Sets the current record's "page" value
 * @method Section             setBanners()       Sets the current record's "banners" collection
 * @method Section             setBlogs()         Sets the current record's "Blogs" collection
 * @method Section             setSectionBanner() Sets the current record's "SectionBanner" collection
 * @method Section             setDownloads()     Sets the current record's "Downloads" collection
 * 
 * @package    Eddyjim
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseSection extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('Sections');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'unique' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('name', 'string', 45, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 45,
             ));
        $this->hasColumn('icon', 'string', 45, array(
             'type' => 'string',
             'length' => 45,
             ));
        $this->hasColumn('order', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('Pages_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));


        $this->index('fk_Sections_Pages1_idx', array(
             'fields' => 
             array(
              0 => 'Pages_id',
             ),
             ));
        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Page as page', array(
             'local' => 'Pages_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));

        $this->hasMany('Banner as banners', array(
             'refClass' => 'SectionBanner',
             'local' => 'section_id',
             'foreign' => 'banner_id'));

        $this->hasMany('Blog as Blogs', array(
             'local' => 'id',
             'foreign' => 'section_id'));

        $this->hasMany('SectionBanner', array(
             'local' => 'id',
             'foreign' => 'section_id'));

        $this->hasMany('Download as Downloads', array(
             'local' => 'id',
             'foreign' => 'sections_id'));
    }
}